// input refactoring regex used :
// ([a-z]{26}) replaced by "$1",

let data = ["efmyhuxcqqldtwjzvisepargvo",
"efuyhuxckqldtwjrvrsbpargno",
"efmyhuxckqlxtwjxvisbpargoo",
"efmyhuxczqbdtwjzvisbpargjo",
"efmyhugckqldtwjzvisfpargnq",
"tfmyhuxckqljtwjzvisbpargko",
"efmyhuxckqldtvuzvisbpavgno",
"efmyhufcrqldtwjzvishpargno",
"tfmyhuxbkqlduwjzvisbpargno",
"efayhtxckqldbwjzvisbpargno",
"efgyhuxckuldtwjzvisbpardno",
"efmyhuxckuldtwizvisbpargqo",
"efmyhuxcknldtjjzvihbpargno",
"efmyhuxcnqddtwjzvisbpafgno",
"efmyhubokqldtwjzvisbpargdo",
"efmhhuxckqldtwdzvisbpjrgno",
"efmyhuxckqldtwjrcisbpargny",
"efmyhuxckqsdtwjzlisbpargng",
"effyhuxckqlqtwjzjisbpargno",
"nfmyhjxckqldtwjzcisbpargno",
"efmyhvxckqldtwszvwsbpargno",
"efmyhuxckqldtwutvisbpprgno",
"kfmyhuxckqldtwzuvisbpargno",
"efhyhtxckqldtwjmvisbpargno",
"efmyhuhckqldtwjzvisbpxwgno",
"efmyhuxcfqldtrjzvitbpargno",
"efmyhudckqldtwjfvisbparvno",
"ekmyhuxckqlstwjzvisbdargno",
"efmyhuxckqlxtwjftisbpargno",
"etsyhuxckqldtwjzvisbpargnf",
"exmyhusckqldtwjzvisbpakgno",
"efmyhubckqlrtljzvisbpargno",
"efmyhuxckwldtwjovizbpargno",
"efmyhulckqzdtwjzvisbpargpo",
"efmyhuxckbcdlwjzvisbpargno",
"zfmyhulckqbdtwjzvisbpargno",
"efmyquxckfldtwazvisbpargno",
"efxyhuxakqldtwjzvisupargno",
"efmlhuxckkedtwjzvisbpargno",
"efhyhuxwkqldtwjzvisbparjno",
"efmyhuxfkqldtwjzvisvparyno",
"efmyhuxckqfdtijzvisblargno",
"efmyhuxckqldtfjzvisbwhrgno",
"efmymuxcknldtwzzvisbpargno",
"eomybuxckqldtwkzvisbpargno",
"pfmyhuxckqldtwgzvasbpargno",
"vfmyhuxcoqldtwjzvisbparvno",
"eflyhuxckqldtwjzvirypargno",
"efmyvuxckqldtwizvisbpaqgno",
"epmyhuxckqldtwjzvesbparpno",
"efoyhuxckoldtwjmvisbpargno",
"efmyhuxckqydtwpzvisbpaqgno",
"efmyhuxckqldezbzvisbpargno",
"efmyhuxckqldtwjzvisboalxno",
"efmyhuxckqldtwuzvipbjargno",
"efmymuxcuqldtwjzvasbpargno",
"jfmyhuxckqldtwjzvzsbpargdo",
"nfmyhuxckqlntsjzvisbpargno",
"efmxhuxckqgdtwjzvisbparjno",
"efmyhuxckpldtpjzvpsbpargno",
"efmyhuxcyqldtwjhvisbpargqo",
"efmyhexgkqydtwjzvisbpargno",
"ffmyhuxckqldtwjzvisbpafgnk",
"efmyfuxckqldtwjpvisbpartno",
"efmyhoxckcmdtwjzvisbpargno",
"efmyhuxxkqldtwjzviabparyno",
"jfmyhuxakqldtwgzvisbpargno",
"efmjhuxckqcdtwjzvisbjargno",
"efmyhuxccqldtwjzxisbxargno",
"efmyhurckqldiwjzvrsbpargno",
"efmyhuxckasdtwjzvisboargno",
"efmyhvxckmldtwjgvisbpargno",
"efmyhuxckoldtwjuvisbpardno",
"efmyduxckqldtwjgvzsbpargno",
"ejmyhuxckqldtwbzvisbpargnb",
"efmymuxchqldtwjzvibbpargno",
"efmyhjxckqldtwjgvinbpargno",
"efmyhuxhyqldtwbzvisbpargno",
"efmyhuxckqldtwjzvisbpzignq",
"efmyuueckqldxwjzvisbpargno",
"qfmyhyxckqldtwizvisbpargno",
"efmyhupckqldtwjzvpgbpargno",
"efmycuxckqldtwjzvfdbpargno",
"efmyhugcrqldtwjfvisbpargno",
"efmyhexckqldtwjzvischargno",
"efmyhuxckqldtljzvasbpamgno",
"efmyzdxckqldtwjovisbpargno",
"efmyhuxccqldtwjzvdsbpaigno",
"ufmyhuxekqldtwjzvisbpargne",
"efmyhuxckqldfwozvisgpargno",
"afmyhuackqldtwjzvisbdargno",
"efmyauxckqldtwjzvisiparmno",
"efmysuxckqldtwjzvisbeaggno",
"efmyhuxckqldtwjzvisbgzigno",
"efryhuxlkqldtwozvisbpargno",
"lfmyhuxckqldtwjzvhsbparuno",
"efmyhzxckqldswjzvisqpargno",
"efmyhuxrkqldtwjzvisgpargco",
"efmyhudckqldtwjzyisbkargno",
"efmyhuacqqldtwjzviabpargno",
"jfmyhuxckqldtwvzvicbpargno",
"efmkhuxckqlftejzvisbpargno",
"nfmyhuxckqldnwjzvisbxargno",
"efmyhuxckqldtwjvvisjpyrgno",
"efmyhuxcmxldtwjzvisbpargto",
"efmyhuxckqldtwqbvpsbpargno",
"efmyhuxckzldjwjzvisbplrgno",
"efmywgxckqldtwxzvisbpargno",
"efmsguxckqldhwjzvisbpargno",
"nfmyhuxlkqldtwjzvisbgargno",
"etmyhuxckqldtwjzvqsbptrgno",
"efmyxuxckqldtfjzvisbyargno",
"cfmihuxckqldtwjzvisbpargnf",
"jfzyhuxckqldtwjzviscpargno",
"efmyhuxckqldtmjzvisbpbzgno",
"bfmyhuzckqldcwjzvisbpargno",
"efmyhuxckqldtmjzvmslpargno",
"efqyvuxckqldtwazvisbpargno",
"efmecrxckqldtwjzvisbpargno",
"efmyhuuckqldtwjzvisrpargnt",
"efmphuxckqldtwjzvisbparmho",
"ifmyhuxckqldtwjzvismpsrgno",
"efmyhuookqldywjzvisbpargno",
"efmyhfxckyldtwjnvisbpargno",
"efmyhxhckqldtwjzvisqpargno",
"efryhuxcfqldtwjzvisbparkno",
"efmyhutckqldpwjzvixbpargno",
"efmyoukckqldtwjzvisbpargko",
"efmyhuxckqldtwjzviseparynv",
"efmyhuxcksldvwjzvisbnargno",
"efmyhuxckqrdtwlzmisbpargno",
"efmyhuxcwqldtwjzviqapargno",
"eymyhuxckqrdtwkzvisbpargno",
"efmyhuxckqldtwjzpisopargnj",
"efmyhuxikqldtwjzvirupargno",
"efmyhuxcuzldtnjzvisbpargno",
"efmyhxxikqldtwjzvisbpalgno",
"efmyhuxceqldtwjzvdsbparguo",
"efmyhuxwkqldtwjmvisbparxno",
"efmyhuxpkqldtwjzvisfpargfo",
"efmyfuxckaldtwjzvirbpargno",
"efmyhuxckqrdtwjzvismprrgno",
"efmyhuxckqldzwjzvisbpnrgfo",
"efmyhfuckqldtwjyvisipargno",
"efmyhuxcpqlqfwjzvisbpargno",
"efmyyuxckqldtwjzvrsepargno",
"efmphuxckqlptqjzvisbpargno",
"efmyhuxnfqldtwjzvisbpmrgno",
"efmyhuxckqldtwjzkisnpnrgno",
"mfmyhuxckqldtwjzvisbzarcno",
"efmyhuxckqldtwlzviszpargwo",
"efmytuxckqndtwjqvisbpargno",
"efmyzuxckqldtwjzvisbaargjo",
"efmihuxckqlutwjzvimbpargno",
"efmyhuxckqldgwjzvixbparono",
"tfmyduxckqldtyjzvisbpargno",
"ejmyhuockqldtwjzvidbpargno",
"efmyheyckqkdtwjzvisbpargno",
"efmyhuxckqldtwjzoisbpargfj",
"efqyhuxcxqldtwxzvisbpargno",
"jfmyhaxckqldtwjzvisbvargno",
"hfmyhqxckqldtwjzvisbparvno",
"efmyhukckqlrtwjzvqsbpargno",
"efmyhuxckqldvwmzvisbparrno",
"efoyhuxckqldtwjzvilwpargno",
"ejmyhuxckqldtwjzxisbprrgno",
"efmyhuxckqldtsjzvisupdrgno",
"efzyhjxckqldtwjzvisbpasgno",
"ebmyhulckqldtwjzvisbpargnr",
"efmyhuxcjqlntwjzqisbpargno",
"efmlocxckqldtwjzvisbpargno",
"efmyhuxckqldtwjzvizkpargnm",
"ebmyhuxckqldtwjzvlfbpargno",
"efmyhuxckqldtwjyvisbpjrgnq",
"afmyhuxckqldtwjzvpsbpargnv",
"efmyxuxckqwdzwjzvisbpargno",
"efmyhuxskqlqthjzvisbpargno",
"efmyhuxckqldtwdzvisbearglo",
"mfmyhuxckqldtzjzvisbparggo",
"efmyhuqckqodtwjzvisbpadgno",
"efmyhuxctqldywjzvisspargno",
"efmyhuxckqqdtwjnvisbporgno",
"efmyhixckqldowjzvisbpaagno",
"efmyhuxckqldtsszvisbpargns",
"edmyhuxckqpdtwjzrisbpargno",
"efsyhuxckqldtijzvisbparano",
"efmyhuxckqxdzwjzviqbpargno",
"efmyhuxckqldtwjzviqqpsrgno",
"efmyhuockqlatwjzvisbpargho",
"efmyhuxckqldtwjzvishkavgno",
"vfmyhuxckqldtwjzvksbaargno",
"efmahuxckqudtwbzvisbpargno",
"ewmyhixckqudtwjzvisbpargno",
"efmywuxczqldtwjzvisbpargao",
"efmyhuqjkqldtwyzvisbpargno",
"efmyhuxekqldtwjzmksbpargno",
"efmyhuxcoqtdtwjzvinbpargno",
"ebmyhuxkkqldtwjzvisbdargno",
"ecmyhnxckqldtwnzvisbpargno",
"efmyhuxbkqldtwjzvksbpaigno",
"efayhuxckqidtwjzvisbpavgno",
"efmrhuxckqldswjzvisbpaugno",
"efmyhuuckqldtwjyvisipargno",
"xfmyhuxckqldawjzvosbpargno",
"efmyhuxckklhtwjzvisbpargnq",
"efmyhmxcaqldzwjzvisbpargno",
"efiyhuxcksldtwjzvisbpamgno",
"zfmyhuzckqldtwjzvisbparhno",
"efmyhuxckqlvtwjdvisbparsno",
"efmyhmxckaldtwjzmisbpargno",
"efmysuxcqoldtwjzvisbpargno",
"efmyhuxckqldtwjzvisbsargrb",
"effyhuxckqldtwjzvisbpwfgno",
"efmyhuxclqmdtwjzxisbpargno",
"edmohuxckqldtwjziisbpargno",
"efmyhuxckpldtwjzviubpaegno",
"efmyhuxcpqldtwjzjimbpargno",
"ehmyhuxckqldtwjzsisbpargnq",
"efmyhcxcdqldtwjzvisbqargno",
"efmjhuxckqldmwjzviybpargno",
"efeyhzxckqlxtwjzvisbpargno",
"efmyhuxczqadtwazvisbpargno",
"efmahuxckqldtwjzvisbpafgnl",
"efmyouxckqldtwjzvizbpacgno",
"emmrhuxckqldtwjzvisqpargno",
"exmyhuxckqlftwjnvisbpargno",
"efuyhuxckqldrwjzvisbpargnw",
"efmywuxfkqldtwjztisbpargno",
"efmyhuxdkqldtwjzvisbpqrzno",
"eemyhuxckqldrwjzvisbpajgno",
"efmyiuxckqldtbjzvrsbpargno",
"eqmyhuxckqldlwjzfisbpargno",
"efmyhuxckqlitwuzvisbpvrgno",
"ecoyhuxckqldtwjzvishpargno",
"efmyhuxckcldtwjzlisbparlno",
"efmyhsxcknldtwjfvisbpargno",
"efmyhuxckqldtwjrvosbpargbo",
"enmehuxckzldtwjzvisbpargno",
"hfmyhuxckqqdtwjzvisbpawgno",
"efmyhufckcjdtwjzvisbpargno",
"efmxhuxckqldthjzvisfpargno",
"efmyaukckqldtwjsvisbpargno",
"efmyhukckqldtwpzvisbpmrgno",
"dfmyhuxckqldtwjzvisbvarmno",
"afmbhuxckqldtwjzvssbpargno",
"efmyhuxchqldtwezvisbpargzo",
"efmphuxckqlxjwjzvisbpargno",
"efhyxuxckqldtwjzvisbpargko",
"sfmyhexckqldtwjzvisbqargno",
"efmghuxckqldtwjzvitbparnno"]

// First part :
let sumTwo = 0
let sumThree = 0

let foundLetters = {}
let foundTwo = false
let foundThree = false

data.forEach( string => {
  foundLetters = {}
  foundTwo = false
  foundThree = false
  string.split('').forEach( letter => {
    if(foundLetters[letter] === undefined) foundLetters[letter] = 1
    else foundLetters[letter]++
  })

  Object.keys(foundLetters).forEach( letter =>{
    if(foundLetters[letter] === 2) foundTwo = true
    if(foundLetters[letter] === 3) foundThree = true
  })
  if(foundTwo) sumTwo++
  if(foundThree) sumThree++
})
console.log(sumTwo*sumThree)

// Second part :

let nbDiff = 0
let indexS1 = 0
let indexS2 = 0

data.forEach( (string1, index1) => {
  data.forEach( (string2, index2) => {
    nbDiff = 0
    if(string1 != string2){
      string1.split('').forEach( (letter, index) => {
        if(letter != string2[index]) nbDiff++
      })
    }
    if(nbDiff === 1){
      indexS1 = index1
      indexS2 = index2
    }
  })
})
let result = ""
data[indexS1].split('').forEach( (letter, index) => {
  if(letter  === data[indexS2][index]) result += letter
})

console.log(result)
